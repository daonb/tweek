version: '1.0'
steps:
  VersionsToDeploy:
      description: Check versions to deploy
      title: Check versions to deploy
      image: alpine/git
      commands:
          - ./CI/versions_to_deploy.sh ${{CF_VOLUME_PATH}}/env_vars_to_export
          
  BuildGitKeys:
    title: Building Git Keys Docker Image
    type: build
    image_name: soluto/tweek-test-keys
    working_directory: ./deployments/dev/ssh/

  BuildingGitRepository:
    title: Building Git Repository Docker Image
    type: build
    image_name: soluto/tweek-bare-repo
    working_directory: ./services/git-service/BareRepository/

  BuildingApiImage:
    title: Building Tweek Api Docker Image
    type: build
    image_name: soluto/tweek-api
    dockerfile: TweekApiDockerfile
  
  BuildingManagement:
    title: Building Management Docker Image
    type: build
    image_name: soluto/tweek-management
    working_directory: ./services/management/

  BuildingAuthoring:
    title: Building Authoring Api Image
    type: build
    image_name: soluto/tweek-authoring
    working_directory: ./services/authoring

  BuildingEditor:
    title: Building Editor Docker Image
    type: build
    image_name: soluto/tweek-editor
    working_directory: ./services/editor/

  BuildingUITests:
    title: Building E2E UI Tests Docker Image
    type: build
    image_name: soluto/e2e-ui
    working_directory: ./e2e/ui

  BuildingIntegrationTests:
    title: Building E2E Integration Tests Docker Image
    type: build
    image_name: soluto/e2e-integration
    working_directory: ./e2e/integration
  
  BuildingApiSmokeTestImage:
    title: Building Tweek Api Smoke Test Docker Image
    type: build
    image_name: soluto/tweek-api-smoke-tests
    dockerfile: TweekApiSmokeTestDockerfile

  BuildingZapImage:
    title: Building Zap Docker Image
    type: build
    image_name: soluto/zap
    working_directory: ./deployments/dev/zap
  
  Tests:
    title: Tests - e2e & smoke
    type: composition
    composition: ./CI/docker-compose.yml
    composition_variables:
      - KEYS_IMAGE=${{BuildGitKeys}}
      - REPOSITORY_IMAGE=${{BuildingGitRepository}}
      - MANAGEMENT_IMAGE=${{BuildingManagement}}
      - API_IMAGE=${{BuildingApiImage}}
      - AUTHORING_IMAGE=${{BuildingAuthoring}}
      - EDITOR_IMAGE=${{BuildingEditor}}
      - ZAP_IMAGE=${{BuildingZapImage}}
      - CF_VOLUME_PATH=${{CF_VOLUME_PATH}}
    composition_candidates:
      smoke-tests:
        image: ${{BuildingApiSmokeTestImage}}
        depends_on: 
          - api
          - management
          - zap-smoke
        environment: 
          - TWEEK_API_URL=http://api/
          - PROXY_URL=http://zap-smoke:8090
      e2e-ui:
        image: ${{BuildingUITests}}
        volumes_from:
          - keys
        depends_on: 
          - selenium
          - editor
          - authoring
          - api
          - management
          - zap-e2e
        environment:
          - EDITOR_URL=http://editor:3000/
          - TWEEK_API_URL=http://api/
          - AUTHORING_URL=http://authoring:3000
          - GIT_PRIVATE_KEY_PATH=/gitkeys/tweekgit
          - PROXY_URL=http://zap-e2e:8090
      e2e-integration:
        image: ${{BuildingIntegrationTests}}
        volumes_from:
          - keys
        depends_on:
          - authoring
          - api
          - management
        environment:
          - API_URL=http://api
          - AUTHORING_URL=http://authoring:3000
          - MANAGEMENT_URL=http://tweek-management:3000
          - GIT_PRIVATE_KEY_PATH=/gitkeys/tweekgit      
    on_success:
      metadata:
        set:
          - '${{BuildingApiImage.imageId}}':
            - CF_QUALITY: true
          - '${{BuildingManagement.imageId}}':
            - CF_QUALITY: true
          - '${{BuildingEditor.imageId}}':
            - CF_QUALITY: true
          - '${{BuildingAuthoring.imageId}}':
            - CF_QUALITY: true
    on_fail:
      metadata:
        set:
          - '${{BuildingApiImage.imageId}}':
            - CF_QUALITY: false
          - '${{BuildingManagement.imageId}}':
            - CF_QUALITY: false
          - '${{BuildingEditor.imageId}}':
            - CF_QUALITY: false
          - '${{BuildingAuthoring.imageId}}':
            - CF_QUALITY: false

  BuildGlueCli:
    title: Building Glue CLI
    type: build
    image_name: soluto/glue-cli
    working_directory: ./deployments/dev/zap/glue

  SecurityTests:
    title: Tests - security
    type: composition
    composition:
      version: '2'
      services:
        zap:
          image: ${{BuildingZapImage}}
          user: root
          volumes:
            - ${CF_VOLUME_PATH}/tweek/deployments/dev/zap/session:/root/.ZAP/session/
    composition_variables:
      - CF_VOLUME_PATH=${{CF_VOLUME_PATH}}
    composition_candidates:
      glue:
        image: ${{BuildGlueCli}}
        working_dir: /repo/tweek/deployments/dev/zap/glue
        command: ./test.sh
        depends_on: 
          - zap
        environment:
          - ZAP_HOST=http://zap
          - ZAP_PORT=8090
        volumes:
          - ${{CF_VOLUME}}:/repo

  PushApiImageMaster:
    type: push
    title: Push Tweek Api - lastest
    when:
      branch:
        only:
          - master
    candidate: ${{BuildingApiImage}}
    tags:
      - latest
      - ${{TWEEK_DOCKER_TAG_API}}

  PushManagementImageMaster:
    type: push
    title: Push Management - lastest
    when:
      branch:
        only:
          - master
    candidate: ${{BuildingManagement}}
    tags:
      - latest
      - ${{TWEEK_DOCKER_TAG_MANAGEMENT}}

  PushAuthoringImageMaster:
    type: push
    title: Push Tweek Authoring - lastest
    when:
      branch:
        only:
          - master
    candidate: ${{BuildingAuthoring}}
    tags:
      - latest
      - ${{TWEEK_DOCKER_TAG_AUTHORING}}

  PushEditorImageMaster:
    type: push
    title: Push Editor - latest
    when:
      branch:
        only:
          - master
    candidate: ${{BuildingEditor}}
    tags:
      - latest
      - ${{TWEEK_DOCKER_TAG_EDITOR}}

  PushGitRepositoryMaster:
    type: push
    title: Push Git Repository - latest
    when:
      branch:
        only:
          - master
    candidate: ${{BuildingGitRepository}}

  Swagger:
    type: composition
    title: Upload swagger
    when:
      branch:
        only:
          - master
    composition: ./CI/docker-compose.yml
    composition_variables:
      - KEYS_IMAGE=${{BuildGitKeys}}
      - REPOSITORY_IMAGE=${{BuildingGitRepository}}
      - MANAGEMENT_IMAGE=${{BuildingManagement}}
      - API_IMAGE=${{BuildingApiImage}}
      - AUTHORING_IMAGE=${{BuildingAuthoring}}
      - EDITOR_IMAGE=${{BuildingEditor}}
      - ZAP_IMAGE=${{BuildingZapImage}}
      - CF_VOLUME_PATH=${{CF_VOLUME_PATH}}
    composition_candidates:
      api_swagger:
        image: node:8.7.0
        depends_on:
          - api
        volumes:
          - ${{CF_VOLUME}}:/repo
        working_dir: /repo/tweek/CI
        environment: 
          - UPDATE_SWAGGER_SECRET=${{UPDATE_SWAGGER_SECRET}}
        command: /bin/bash -c "wget --tries 20 --timeout=15 --read-timeout=20 --waitretry=30 --retry-connrefused http://api/status && ./update_swagger.sh api ${{TWEEK_DOCKER_TAG_API}} http://api/api/swagger.json"
